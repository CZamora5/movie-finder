@forward "./HamburgerButton.animation.scss";
@use "../../styles/utils/" as utils;

.hamburger {
  --button-size: 2rem;
  --animation-duration: 0
  ;

  position: absolute;
  top: 0.5rem;
  right: 1rem;
  z-index: 2;
  width: var(--button-size);
  height: var(--button-size);
  border-radius: calc(var(--button-size) * 0.15);
  background-color: var(--clr-main);
  cursor: pointer;

  &.not-first-render {
    animation-delay: 400ms;
  }

  &::before,
  &::after {
    --width: calc(var(--button-size) * 0.8);
    --aux-width: calc(var(--button-size) * 0.16);
    --padding-left: calc((var(--button-size) - var(--width)) * 0.5);
    --aux-padding-left: calc((var(--button-size) - var(--aux-width)) * 0.5);
    --height: 0.325rem;

    content: "";
    position: absolute;
    left: var(--padding-left);
    top: 50%;
    width: var(--width);
    height: var(--height);
    border-radius: 100vw;
    background-color: var(--clr-accent);
  }

  &::before {
    @include utils.transform($y: calc(var(--height) * -2));
    animation: animate-before-reversed 450ms linear forwards;
    animation-duration: var(--animation-duration);
  }

  &::after {
    @include utils.transform($y: var(--height));
    animation: animate-after-reversed 450ms linear forwards;
    animation-duration: var(--animation-duration);
  }

  &.active {
    position: fixed;
    animation-delay: 450ms;

    &::before {
      animation: animate-before 450ms linear forwards;
    }

    &::after {
      animation: animate-after 450ms linear forwards;
    }
  }

  @include utils.breakpoints(sm) {
    display: none;
  }
}